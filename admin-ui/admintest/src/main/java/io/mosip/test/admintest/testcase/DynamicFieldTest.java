package io.mosip.test.admintest.testcase;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
// Generated by Selenium IDE
//import org.junit.Test;
//import org.junit.Before;
//import org.junit.After;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import io.mosip.test.admintest.utility.BaseClass;
import io.mosip.test.admintest.utility.Commons;

public class DynamicFieldTest extends BaseClass{
 
 
  @Test(groups = "DF")
  public void dynamicFieldCRUD() {
	 
   
    Commons.click(driver,By.xpath("//a[@href='#/admin/masterdata']"));
   
    Commons.click(driver,By.id("createDynamicField"));
    
  
  
    Commons.enter(driver,By.id("code"),data);
    
    Commons.enter(driver,By.id("name"),"Automation");
    Commons.enter(driver,By.id("description"),data);

    Commons.enter(driver,By.id("value"),data);
    

    Commons.create(driver);
	Commons.filter(driver, By.id("description"), data);
	

	Commons.edit(driver,data+1,By.id("description"));
	Commons.filter(driver, By.id("description"), data+1);
	
	Commons.activate(driver);
	Commons.edit(driver,data+2,By.id("description"));
	Commons.filter(driver, By.id("description"), data+2);
	Commons.deactivate(driver);

  }
}
